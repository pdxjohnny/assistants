version: '3.8'
services:
  postgres:
    container_name: pg
    image: postgres
    # image: ankane/pgvector
    restart: always
    environment:
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: mydatabase
    ports:
      - 5432:5432
    command: postgres -c 'max_connections=250'
    volumes:
      - ../hal-9100-core/src/migrations.sql:/docker-entrypoint-initdb.d/migrations.sql
      - ./pg-healthcheck.sh:/pg-healthcheck.sh
    healthcheck:
      test: ["CMD-SHELL", "/pg-healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
  redis:
    container_name: redis 
    image: redis
    restart: always
    ports:
      - 6379:6379

  minio:
    container_name: minio1
    image: minio/minio
    restart: always
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
  
  hal-9100:
    container_name: hal-9100
    image: ghcr.io/stellar-amenities/hal-9100/hal-9100:0.0.20
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - postgres
      - redis
      - minio
    profiles:
      - api
    environment:
      - DATABASE_URL=postgres://postgres:secret@postgres/mydatabase
      - S3_ENDPOINT=http://minio:9000
      - REDIS_URL=redis://redis
    command: ["--config", "/app/hal-9100.toml", "--port", "3000"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    volumes:
      # Necessary for Code Interpreter to work
      - /var/run/docker.sock:/var/run/docker.sock
      - ../hal-9100.toml:/app/hal-9100.toml

# docker compose --profile api -f docker/docker-compose.yml up

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - 11434:11434
    profiles:
      - ollama
    volumes:
      - $HOME/.ollama/models:/usr/share/ollama/.ollama/models

  ollama-runner:
    container_name: ollama-runner
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: |
      sh -c "
      while ! docker exec ollama true 2>/dev/null; do
        echo 'Waiting for ollama...'
        sleep 1
      done
      echo 'Ollama is ready, running command...'
      docker exec ollama ollama run gemma:2b
      "
    depends_on:
      - ollama
    profiles:
      - ollama
  
# docker compose --profile api --profile ollama -f docker/docker-compose.yml up
